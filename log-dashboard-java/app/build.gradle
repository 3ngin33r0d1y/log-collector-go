plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5' // Use stable Spring Boot 3 version
    id 'io.spring.dependency-management' version '1.1.5'
    id 'application' // Keep application plugin for main class definition
    // Removed: id "com.github.node-gradle.node" version "7.0.2"
}

group = 'log.dashboard'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()

    // *** IMPORTANT: If you cannot access public repositories, uncomment and configure your internal Nexus/Artifactory repository below ***
    // maven {
    //     url "YOUR_INTERNAL_NEXUS_OR_ARTIFACTORY_URL"
    //     // If your repository requires authentication, uncomment and configure credentials:
    //     // credentials {
    //     //     username "YOUR_USERNAME"
    //     //     password "YOUR_PASSWORD_OR_API_KEY"
    //     // }
    // }
}

ext {
    set('springCloudVersion', "2023.0.1") // Check compatibility with Spring Boot 3.2.5
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-vault-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap' // Needed for Vault config loading
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // AWS SDK v2 for S3 (using BOM for version management)
    implementation platform('software.amazon.awssdk:bom:2.20.47')
    implementation 'software.amazon.awssdk:s3'
    implementation 'software.amazon.awssdk:url-connection-client' // Using URLConnection client for simplicity

    // Jackson (usually included with spring-boot-starter-web, but explicit for clarity)
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Optional: If using AppRole authentication with Vault (Included via starter)
    // implementation 'org.springframework.vault:spring-vault-approle'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

application {
    mainClass = 'log.dashboard.LogDashboardApplication'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Removed Node/React build integration tasks (npmInstallReact, buildReactApp)

// Copy React build output (assuming it's manually built) to Spring Boot static resources
processResources {
    // Ensure the frontend is built manually before running this task
    from("${project.projectDir}/src/main/frontend/build") {
        into 'static'
    }
}

// Configure Spring Boot executable JAR/WAR
bootJar {
    // Ensures the static content from the manually built React app is included
    from("${project.projectDir}/src/main/frontend/build") {
        into 'BOOT-INF/classes/static'
    }
}

